{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"따릉이_Igbm.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"GSlQFVOCzFBL","executionInfo":{"status":"ok","timestamp":1633499083542,"user_tz":-540,"elapsed":1299,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["import pandas as pd\n","import numpy as np\n","from sklearn.linear_model import LinearRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.metrics import mean_squared_error, r2_score\n","import seaborn as sns\n","import lightgbm as lgb"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"P5KFQW5s4mEd","executionInfo":{"status":"ok","timestamp":1633499083549,"user_tz":-540,"elapsed":28,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["#from google.colab import drive\n","#drive.mount('/content/drive')"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"OAKppmn_xL3y","executionInfo":{"status":"ok","timestamp":1633499083550,"user_tz":-540,"elapsed":28,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["df = pd.read_csv('final_dataset_num.csv', encoding='utf-8-sig')\n","df.drop(df.iloc[:,0:1], axis=1, inplace=True)"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"2GbtAwfPIXHJ","executionInfo":{"status":"ok","timestamp":1633499083550,"user_tz":-540,"elapsed":28,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":[""],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"VD7hkgTKIX9U","executionInfo":{"status":"ok","timestamp":1633499083551,"user_tz":-540,"elapsed":27,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":[""],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cVq7GI0bB6Hb","executionInfo":{"status":"ok","timestamp":1633499083552,"user_tz":-540,"elapsed":27,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"24c3bf79-3628-4a84-888f-2c8261a504f7"},"source":["df.columns"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['time', 'place', 'temp(°C)', 'rain(mm)', 'wind(m/s)', 'NO2(ppm)',\n","       'ozone(ppm)', 'CO2(ppm)', 'SO2(ppm)', 'dust', 'micro dust', 'rent_num'],\n","      dtype='object')"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"q5CSiq16CeQK","executionInfo":{"status":"ok","timestamp":1633499083552,"user_tz":-540,"elapsed":22,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"3e0aa3e7-49e4-4fb6-da50-7e1314a4a442"},"source":["df.describe()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>temp(°C)</th>\n","      <th>rain(mm)</th>\n","      <th>wind(m/s)</th>\n","      <th>NO2(ppm)</th>\n","      <th>ozone(ppm)</th>\n","      <th>CO2(ppm)</th>\n","      <th>SO2(ppm)</th>\n","      <th>dust</th>\n","      <th>micro dust</th>\n","      <th>rent_num</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10438.000000</td>\n","      <td>10438.000000</td>\n","      <td>10438.000000</td>\n","      <td>10438.000000</td>\n","      <td>10438.000000</td>\n","      <td>10438.000000</td>\n","      <td>10438.000000</td>\n","      <td>10438.000000</td>\n","      <td>10438.000000</td>\n","      <td>10438.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>13.783359</td>\n","      <td>3.371336</td>\n","      <td>1.615453</td>\n","      <td>0.028228</td>\n","      <td>0.023553</td>\n","      <td>0.502251</td>\n","      <td>0.003837</td>\n","      <td>39.600786</td>\n","      <td>22.873443</td>\n","      <td>1510.975378</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>10.473047</td>\n","      <td>12.333431</td>\n","      <td>0.732878</td>\n","      <td>0.064758</td>\n","      <td>0.013011</td>\n","      <td>0.195346</td>\n","      <td>0.001329</td>\n","      <td>23.721079</td>\n","      <td>15.633736</td>\n","      <td>1463.952216</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-14.900000</td>\n","      <td>0.000000</td>\n","      <td>0.100000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.100000</td>\n","      <td>0.001000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>4.900000</td>\n","      <td>0.000000</td>\n","      <td>1.100000</td>\n","      <td>0.018000</td>\n","      <td>0.013000</td>\n","      <td>0.400000</td>\n","      <td>0.003000</td>\n","      <td>24.000000</td>\n","      <td>12.000000</td>\n","      <td>509.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>14.600000</td>\n","      <td>0.000000</td>\n","      <td>1.400000</td>\n","      <td>0.025000</td>\n","      <td>0.022000</td>\n","      <td>0.500000</td>\n","      <td>0.004000</td>\n","      <td>35.000000</td>\n","      <td>20.000000</td>\n","      <td>1109.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>23.000000</td>\n","      <td>0.000000</td>\n","      <td>1.900000</td>\n","      <td>0.035000</td>\n","      <td>0.032000</td>\n","      <td>0.600000</td>\n","      <td>0.005000</td>\n","      <td>51.000000</td>\n","      <td>29.000000</td>\n","      <td>1904.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>34.200000</td>\n","      <td>148.500000</td>\n","      <td>6.700000</td>\n","      <td>6.523000</td>\n","      <td>0.099000</td>\n","      <td>1.700000</td>\n","      <td>0.015000</td>\n","      <td>243.000000</td>\n","      <td>144.000000</td>\n","      <td>10265.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           temp(°C)      rain(mm)  ...    micro dust      rent_num\n","count  10438.000000  10438.000000  ...  10438.000000  10438.000000\n","mean      13.783359      3.371336  ...     22.873443   1510.975378\n","std       10.473047     12.333431  ...     15.633736   1463.952216\n","min      -14.900000      0.000000  ...      1.000000      1.000000\n","25%        4.900000      0.000000  ...     12.000000    509.000000\n","50%       14.600000      0.000000  ...     20.000000   1109.000000\n","75%       23.000000      0.000000  ...     29.000000   1904.000000\n","max       34.200000    148.500000  ...    144.000000  10265.000000\n","\n","[8 rows x 10 columns]"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"QwGLmHPPCTJZ","executionInfo":{"status":"ok","timestamp":1633499083553,"user_tz":-540,"elapsed":21,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"5b419ac3-aaf9-4edc-c736-e955d507b713"},"source":["df.head()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>place</th>\n","      <th>temp(°C)</th>\n","      <th>rain(mm)</th>\n","      <th>wind(m/s)</th>\n","      <th>NO2(ppm)</th>\n","      <th>ozone(ppm)</th>\n","      <th>CO2(ppm)</th>\n","      <th>SO2(ppm)</th>\n","      <th>dust</th>\n","      <th>micro dust</th>\n","      <th>rent_num</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-06-05</td>\n","      <td>서초구</td>\n","      <td>23.5</td>\n","      <td>0.0</td>\n","      <td>1.3</td>\n","      <td>0.029</td>\n","      <td>0.047</td>\n","      <td>0.4</td>\n","      <td>0.005</td>\n","      <td>29.0</td>\n","      <td>14.0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017-06-06</td>\n","      <td>서초구</td>\n","      <td>18.9</td>\n","      <td>8.5</td>\n","      <td>1.8</td>\n","      <td>0.017</td>\n","      <td>0.042</td>\n","      <td>0.3</td>\n","      <td>0.005</td>\n","      <td>21.0</td>\n","      <td>10.0</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017-06-07</td>\n","      <td>서초구</td>\n","      <td>18.2</td>\n","      <td>9.5</td>\n","      <td>1.6</td>\n","      <td>0.020</td>\n","      <td>0.030</td>\n","      <td>0.4</td>\n","      <td>0.005</td>\n","      <td>18.0</td>\n","      <td>9.0</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017-06-08</td>\n","      <td>서초구</td>\n","      <td>20.5</td>\n","      <td>0.0</td>\n","      <td>1.3</td>\n","      <td>0.019</td>\n","      <td>0.056</td>\n","      <td>0.6</td>\n","      <td>0.006</td>\n","      <td>47.0</td>\n","      <td>28.0</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-06-09</td>\n","      <td>서초구</td>\n","      <td>22.0</td>\n","      <td>0.0</td>\n","      <td>1.7</td>\n","      <td>0.017</td>\n","      <td>0.061</td>\n","      <td>0.5</td>\n","      <td>0.006</td>\n","      <td>60.0</td>\n","      <td>33.0</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         time place  temp(°C)  rain(mm)  ...  SO2(ppm)  dust  micro dust  rent_num\n","0  2017-06-05   서초구      23.5       0.0  ...     0.005  29.0        14.0        25\n","1  2017-06-06   서초구      18.9       8.5  ...     0.005  21.0        10.0        14\n","2  2017-06-07   서초구      18.2       9.5  ...     0.005  18.0         9.0        18\n","3  2017-06-08   서초구      20.5       0.0  ...     0.006  47.0        28.0        34\n","4  2017-06-09   서초구      22.0       0.0  ...     0.006  60.0        33.0        25\n","\n","[5 rows x 12 columns]"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4DvKRvy9CPHK","executionInfo":{"status":"ok","timestamp":1633499083553,"user_tz":-540,"elapsed":19,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"12b8a129-6658-4edb-e5fc-6c5d00126099"},"source":["df.info()"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10438 entries, 0 to 10437\n","Data columns (total 12 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   time        10438 non-null  object \n"," 1   place       10438 non-null  object \n"," 2   temp(°C)    10438 non-null  float64\n"," 3   rain(mm)    10438 non-null  float64\n"," 4   wind(m/s)   10438 non-null  float64\n"," 5   NO2(ppm)    10438 non-null  float64\n"," 6   ozone(ppm)  10438 non-null  float64\n"," 7   CO2(ppm)    10438 non-null  float64\n"," 8   SO2(ppm)    10438 non-null  float64\n"," 9   dust        10438 non-null  float64\n"," 10  micro dust  10438 non-null  float64\n"," 11  rent_num    10438 non-null  int64  \n","dtypes: float64(9), int64(1), object(2)\n","memory usage: 978.7+ KB\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eQF9kqRpPBNy","executionInfo":{"status":"ok","timestamp":1633499083554,"user_tz":-540,"elapsed":17,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"5f324195-f0cd-49d3-cc81-c79018f60d84"},"source":["df.columns"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['time', 'place', 'temp(°C)', 'rain(mm)', 'wind(m/s)', 'NO2(ppm)',\n","       'ozone(ppm)', 'CO2(ppm)', 'SO2(ppm)', 'dust', 'micro dust', 'rent_num'],\n","      dtype='object')"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"MwEYOGm4yubN","executionInfo":{"status":"ok","timestamp":1633499083555,"user_tz":-540,"elapsed":16,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["raw_y = df['rent_num']\n","raw_x = df.drop(['rent_num','time', 'place'], axis=1)"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"1AHkqWYzy51N","executionInfo":{"status":"ok","timestamp":1633499083555,"user_tz":-540,"elapsed":15,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["train_x, test_x, train_y, test_y = train_test_split(raw_x, raw_y, test_size=0.3, random_state=42)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"LlAj5SiUzCxm","executionInfo":{"status":"ok","timestamp":1633499083556,"user_tz":-540,"elapsed":16,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["train_ds = lgb.Dataset(train_x, label = train_y) \n","test_ds = lgb.Dataset(test_x, label = test_y) "],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"gLaHU2SVzK2C","executionInfo":{"status":"ok","timestamp":1633499083864,"user_tz":-540,"elapsed":323,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["params = {'learning_rate': 0.01, \n","          'max_depth': 16, \n","          'boosting': 'gbdt', \n","          'objective': 'regression', \n","          'metric': 'mse', \n","          'is_training_metric': True, \n","          'num_leaves': 144, \n","          'feature_fraction': 0.9, \n","          'bagging_fraction': 0.7, \n","          'bagging_freq': 5, \n","          'seed':2018}"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d2hgKkmwzL2s","executionInfo":{"status":"ok","timestamp":1633499090003,"user_tz":-540,"elapsed":6145,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"4777959b-3ad7-432b-e9f2-d583253f38a1"},"source":["model = lgb.train(params, train_ds, 2000, test_ds, verbose_eval=100, early_stopping_rounds=200)"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Training until validation scores don't improve for 200 rounds.\n","[100]\tvalid_0's l2: 1.53754e+06\n","[200]\tvalid_0's l2: 1.39493e+06\n","[300]\tvalid_0's l2: 1.34972e+06\n","[400]\tvalid_0's l2: 1.32546e+06\n","[500]\tvalid_0's l2: 1.31665e+06\n","[600]\tvalid_0's l2: 1.30705e+06\n","[700]\tvalid_0's l2: 1.3033e+06\n","[800]\tvalid_0's l2: 1.30281e+06\n","[900]\tvalid_0's l2: 1.30125e+06\n","[1000]\tvalid_0's l2: 1.29949e+06\n","[1100]\tvalid_0's l2: 1.29954e+06\n","[1200]\tvalid_0's l2: 1.30207e+06\n","Early stopping, best iteration is:\n","[1068]\tvalid_0's l2: 1.29797e+06\n"]}]},{"cell_type":"code","metadata":{"id":"s5iPATKRzOWe","executionInfo":{"status":"ok","timestamp":1633499091491,"user_tz":-540,"elapsed":1491,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["predict_train = model.predict(train_x)\n","predict_test = model.predict(test_x)"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"J0qxtmHrzQ3E","executionInfo":{"status":"ok","timestamp":1633499091495,"user_tz":-540,"elapsed":13,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["mse = mean_squared_error(test_y, predict_test)\n","r2 = r2_score(test_y, predict_test)"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"et3hfUjtMoBq","executionInfo":{"status":"ok","timestamp":1633499091496,"user_tz":-540,"elapsed":13,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["# predict_test = rint(predict_test)"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5_EqUjk_zS5r","executionInfo":{"status":"ok","timestamp":1633499091496,"user_tz":-540,"elapsed":12,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"79337e71-98b4-45ff-aa31-6997337f61ea"},"source":["print('Mean squared error: ', mse)\n","print('R2 score: ', r2)"],"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean squared error:  1297971.9991812578\n","R2 score:  0.38498737913133607\n"]}]},{"cell_type":"code","metadata":{"id":"Gy5pXRvnzVHY","executionInfo":{"status":"ok","timestamp":1633499091497,"user_tz":-540,"elapsed":10,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["final_result = pd.concat([test_y.reset_index(drop=True), pd.DataFrame(predict_test)], axis = 1)"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"2EAW8mMMzn8H","executionInfo":{"status":"ok","timestamp":1633499091497,"user_tz":-540,"elapsed":9,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["final_result.columns = ['rent','predict']"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"rECo8Hg9zqNV","executionInfo":{"status":"ok","timestamp":1633499092164,"user_tz":-540,"elapsed":675,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"88f67c8b-ad9b-4f87-f0f9-5888cd451df9"},"source":["sns.regplot(x = 'rent', y = 'predict', data = final_result)\n"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f1ba4ebdd90>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"UEvsKoccN-Qi","executionInfo":{"status":"ok","timestamp":1633499092815,"user_tz":-540,"elapsed":657,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"e627fb7d-ec1a-47cb-c3f0-c252bcd28013"},"source":["#Plot Variable Importances\n","lgb.plot_importance(model, max_num_features=21, importance_type='split')"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f1ba4db4590>"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":346},"id":"rYWHaVz-IZDj","executionInfo":{"status":"error","timestamp":1633499689184,"user_tz":-540,"elapsed":314758,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"0147b298-ce93-4229-d42d-b28bc6fa4af1"},"source":["from sklearn.svm import SVC\n","model_measure(SVC(random_state=42),\n","              train_x, train_y, test_x, test_y)"],"execution_count":27,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-27-d2bfc31119b0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msvm\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mSVC\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m model_measure(SVC(random_state=42),\n\u001b[0;32m----> 3\u001b[0;31m               train_x, train_y, test_x, test_y)\n\u001b[0m","\u001b[0;32m<ipython-input-25-9d2bcb1acc1a>\u001b[0m in \u001b[0;36mmodel_measure\u001b[0;34m(model, train_X, train_y, test_X, test_y)\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mmodel_measure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_X\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_y\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_X\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_y\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m   \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_X\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_y\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m   \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_X\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m   \u001b[0mcm\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconfusion_matrix\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_y\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m   \u001b[0mprecision\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcm\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mcm\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mcm\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    592\u001b[0m             \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecision_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 594\u001b[0;31m             \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    595\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mintp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    596\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    315\u001b[0m         \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_for_predict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    316\u001b[0m         \u001b[0mpredict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sparse_predict\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sparse\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dense_predict\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 317\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    318\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    319\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_dense_predict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py\u001b[0m in \u001b[0;36m_dense_predict\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    337\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprobA_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprobB_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msvm_type\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msvm_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkernel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkernel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    338\u001b[0m             \u001b[0mdegree\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdegree\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcoef0\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcoef0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgamma\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_gamma\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 339\u001b[0;31m             cache_size=self.cache_size)\n\u001b[0m\u001b[1;32m    340\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    341\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_sparse_predict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","metadata":{"id":"mXflsJpAIqj0","executionInfo":{"status":"ok","timestamp":1633499349832,"user_tz":-540,"elapsed":345,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["from sklearn.metrics import confusion_matrix\n","def model_measure(model, train_X, train_y, test_X, test_y):\n","  model.fit(train_X, train_y)\n","  y_pred = model.predict(test_X)\n","  cm = confusion_matrix(test_y, y_pred)\n","  precision = cm[1,1] / (cm[0,1] + cm[1,1])\n","  recall = cm[1,1] / (cm[1,0] + cm[1,1])\n","  f1score = (2 * precision * recall) / (precision + recall)\n","  print(f'precision : {precision : .6f}, recall : {recall:.6f}, f1score : {f1score:.6f}')"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kxzZzuCUJd3N","executionInfo":{"status":"ok","timestamp":1633506006481,"user_tz":-540,"elapsed":6307749,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"13615d29-39bf-4812-978f-bdab8cb977a9"},"source":["!pip install xgboost\n","from xgboost import XGBClassifier\n","\n","model_measure(XGBClassifier(max_dapth = 10, n_estimators = 100, learning_rate = 0.01, use_label_encoder = False),\n","              train_x, train_y, test_x, test_y)"],"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: xgboost in /usr/local/lib/python3.7/dist-packages (0.90)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from xgboost) (1.19.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from xgboost) (1.4.1)\n","precision :  nan, recall : nan, f1score : nan\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: RuntimeWarning: invalid value encountered in long_scalars\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:7: RuntimeWarning: invalid value encountered in long_scalars\n","  import sys\n"]}]},{"cell_type":"code","metadata":{"id":"vcz3TrzlKy40"},"source":[""],"execution_count":null,"outputs":[]}]}